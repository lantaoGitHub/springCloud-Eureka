spring:
  application:
    name: eurka-register
  profiles: peer1

server:
  port: 8081

eureka:
  instance:
    hostname: erueka-server-1
  client:
    #默认设置下，服务注册中心也会将自己作为客户端来尝试注册自己，这里禁用它的客户端注册行为
    register-with-eureka: false
    ##由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false
    fetch-registry: false
    service-url:
      defaultZone: http://erueka-server-2:8082/eureka/,http://erueka-server-3:8083/eureka/
  server:
    enable-self-preservation: false

---

spring:
  application:
    name: eurka-register
  profiles: peer2

server:
  port: 8082

eureka:
  instance:
    hostname: erueka-server-2
  client:
    #默认设置下，服务注册中心也会将自己作为客户端来尝试注册自己，这里禁用它的客户端注册行为
    register-with-eureka: false
    ##由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false
    fetch-registry: false
    service-url:
      defaultZone: http://erueka-server-1:8081/eureka/,http://erueka-server-3:8083/eureka/
  server:
    enable-self-preservation: false

---

spring:
  application:
    name: eurka-register
  profiles: peer3

server:
  port: 8083

eureka:
  instance:
    hostname: erueka-server-3
  client:
    #默认设置下，服务注册中心也会将自己作为客户端来尝试注册自己，这里禁用它的客户端注册行为
    register-with-eureka: false
    ##由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false
    fetch-registry: false
    service-url:
      defaultZone: http://erueka-server-1:8081/eureka/,http://erueka-server-2:8082/eureka/
  server:
    enable-self-preservation: false